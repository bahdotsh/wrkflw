name: Build & Test

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CI: true
  WRKFLW_TEST_SKIP_DOCKER: true

jobs:
  build:
    name: Build & Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy
      
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check Formatting
        run: cargo fmt --all -- --check
      
      - name: Lint with Clippy
        run: cargo clippy -- -D warnings
      
      - name: Build
        run: cargo build --verbose
      
      - name: Check Docker Availability on Linux
        if: runner.os == 'Linux'
        id: docker-check
        run: |
          if command -v docker &> /dev/null && docker info &> /dev/null; then
            echo "docker-available=true" >> $GITHUB_OUTPUT
            echo "Docker is available, will run Docker tests"
          else
            echo "docker-available=false" >> $GITHUB_OUTPUT
            echo "Docker is not available, will skip Docker tests"
          fi
      
      - name: Run Tests
        run: cargo test --verbose
        timeout-minutes: 10  # Add timeout to prevent tests from running indefinitely 